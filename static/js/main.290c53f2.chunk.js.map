{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Klip-test.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","KlipTest","request_key","prepare_auth","a","prepare","auth","bappname","successLink","failLink","res","err","console","error","alert","prepare_sendKlay","sendKLAY","from","to","amount","prepare_executeContract","executeContract","value","abi","params","process","REACT_APP_PUBLIC_KEY","onClick","routing","path","element","ReactDOM","render","document","getElementById"],"mappings":"iMAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6CCsDCQ,MA3Df,WACE,IAAIC,EAAc,KACZC,EAAY,uCAAI,4BAAAC,EAAA,4DACD,YACG,yBACH,wBAHC,SAIAC,UAAQC,KAAK,CAACC,SAHf,YAGyBC,YAFtB,yBAEmCC,SADtC,0BAHC,QAIZC,EAJY,QAKXC,KACHC,QAAQC,MAAM,uBACdC,MAAM,wBACCJ,EAAIR,cACXA,EAAcQ,EAAIR,YAClBY,MAAMZ,IAVQ,2CAAJ,qDAaZa,EAAgB,uCAAG,4BAAAX,EAAA,4DACJ,YACJ,GACF,GACI,IACK,GACH,GANI,SAOHC,UAAQW,SAAS,CAAET,SANpB,YAM8BU,KALlC,GAKwCC,GAJ1C,GAI8CC,OAH1C,IAGkDX,YAF7C,GAE0DC,SAD7D,KANI,QAOfC,EAPe,QAQbC,KACJC,QAAQC,MAAM,2BACdC,MAAM,4BACCJ,EAAIR,cACbA,EAAcQ,EAAIR,YAClBY,MAAMZ,IAba,4CAAH,qDAgBhBkB,EAAuB,uCAAG,4BAAAhB,EAAA,4DACX,YACJ,GACF,GACG,GACF,GACG,GACK,GACH,GARW,UASVC,UAAQgB,gBAAgB,CAAEd,SAR3B,YAQqCU,KAPzC,GAO+CC,GANjD,GAMqDI,MALlD,GAKyDC,IAJ3D,GAIgEC,OAH7D,GAGqEhB,YAFhE,GAE6EC,SADhF,KARW,SAStBC,EATsB,QAUpBC,KACNC,QAAQC,MAAM,kCACdC,MAAM,mCACGJ,EAAIR,cACbA,EAAcQ,EAAIR,YAClBY,MAAMZ,IAfoB,4CAAH,qDAmB7B,OADqBuB,gJAAYC,qBAE/B,gCACI,wBAAQC,QAASxB,EAAjB,+BAA+C,uBAC/C,wBAAQwB,QAASZ,EAAjB,mCAAuD,uBACvD,wBAAQY,QAASP,EAAjB,0CAAqE,2BChDvEQ,EACJ,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,UAK/BC,IAASC,OACPJ,EACAK,SAASC,eAAe,SAM1B1C,M","file":"static/js/main.290c53f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useCallback } from 'react';\r\nimport { prepare, request, getResult, getCardList } from 'klip-sdk'\r\nfunction KlipTest() {\r\n  let request_key = null\r\n  const prepare_auth  = async () => {\r\n      const bappname = 'Test BApp'\r\n      const successLink = 'https://www.google.com'\r\n      const failLink = 'https://www.naver.com'\r\n      const res = await prepare.auth({bappname, successLink, failLink})\r\n      if(res.err){\r\n          console.error(\"Auth_Error Occured!\")\r\n          alert(\"Auth_Error Occured!\")\r\n      } else if (res.request_key){\r\n          request_key = res.request_key\r\n          alert(request_key)\r\n      }\r\n  }\r\n  const prepare_sendKlay = async () => {\r\n      const bappname = 'Test BApp'\r\n      const from = ''\r\n      const to = ''\r\n      const amount = '1'\r\n      const successLink = ''\r\n      const failLink = ''\r\n      const res = await prepare.sendKLAY({ bappname, from, to, amount, successLink, failLink })\r\n      if (res.err) {\r\n          console.error(\"SendKlay_Error Occured!\")\r\n          alert(\"SendKlay_Error Occured!\")\r\n      } else if (res.request_key){\r\n        request_key = res.request_key\r\n        alert(request_key)\r\n      }\r\n  }\r\n  const prepare_executeContract = async () => {\r\n      const bappname = 'Test BApp'\r\n      const from = ''\r\n      const to = ''\r\n      const value = ''\r\n      const abi = ''\r\n      const params = ''\r\n      const successLink = ''\r\n      const failLink = ''\r\n      const res = await prepare.executeContract({ bappname, from, to, value, abi, params, successLink, failLink })\r\n      if (res.err) {\r\n        console.error(\"executeContract_Error Occured!\")\r\n        alert(\"executeContract_Error Occured!\")\r\n      } else if (res.request_key) {\r\n        request_key = res.request_key\r\n        alert(request_key)\r\n      }\r\n  }\r\n  const OwnerAddress = process.env.REACT_APP_PUBLIC_KEY\r\n  return (\r\n    <div>\r\n        <button onClick={prepare_auth}>Auth 버튼</button><br/>\r\n        <button onClick={prepare_sendKlay}>SendKlay 버튼</button><br/>\r\n        <button onClick={prepare_executeContract}>ExecuteContract 버튼</button><br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KlipTest;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, BrowserRouter, Routes } from 'react-router-dom'\nimport KlipTest from './components/Klip-test';\n\nconst routing = (\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<KlipTest />}/>\n    </Routes>\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}