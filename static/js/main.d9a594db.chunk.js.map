{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Klip-test.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","KlipTest","prepare_auth","a","request_key","prepare","auth","bappname","successLink","failLink","res","err","alert","prepare_sendKlay","sendKLAY","bappName","from","to","amount","console","error","prepare_executeContract","executeContract","value","abi","params","process","REACT_APP_PUBLIC_KEY","onClick","req","request","routing","basename","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"iMAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6CC+DCQ,MApEf,WACE,IACMC,EAAY,uCAAI,8BAAAC,EAAA,4DACD,YACG,yBACH,wBACbC,EAAc,KAJA,SAKAC,UAAQC,KAAK,CAAEC,SAJhB,YAI0BC,YAHvB,yBAGoCC,SAFvC,0BAHC,cAKZC,EALY,QAMXC,IACHC,MAAM,yBAA2BF,EAAIC,KAC9BD,EAAIN,cACXA,EAAcM,EAAIN,aATJ,kBAWXA,GAXW,2CAAJ,qDAaZS,EAAgB,uCAAG,8BAAAV,EAAA,4DACJ,YACJ,GACF,6CACI,IACK,yBACH,wBACbC,EAAc,KAPG,SAQHC,UAAQS,SAAS,CAAEC,SAPpB,YAO8BC,KANlC,GAMwCC,GAL1C,6CAK8CC,OAJ1C,IAIkDV,YAH7C,yBAG0DC,SAF7D,0BANI,cAQfC,EARe,QASbC,IACJQ,QAAQC,MAAM,6BAA+BV,EAAIC,KAC1CD,EAAIN,cACXA,EAAcM,EAAIN,aAZD,kBAcdA,GAdc,4CAAH,qDAgBhBiB,EAAuB,uCAAG,8BAAAlB,EAAA,4DACX,YACJ,GACF,6CACG,IACF,4LACG,QACK,yBACH,wBACbC,EAAc,KATU,UAUVC,UAAQiB,gBAAgB,CAAEP,SAT3B,YASqCC,KARzC,GAQ+CC,GAPjD,6CAOqDM,MANlD,IAMyDC,IAL3D,4LAKgEC,OAJ7D,QAIqEjB,YAHhE,yBAG6EC,SAFhF,0BARW,eAUtBC,EAVsB,QAWpBC,IACNC,MAAM,oCAAsCF,EAAIC,KACvCD,EAAIN,cACbA,EAAcM,EAAIN,aAdQ,kBAgBrBA,GAhBqB,4CAAH,qDAmB7B,OADqBsB,gJAAYC,qBAE/B,gCACI,wBAAQC,QAAS,WACf,IAAMC,EAAM3B,IACZ4B,kBAAQD,GAAK,kBAAKjB,MAAM,mFAF1B,+BAGmB,uBACnB,wBAAQgB,QAAS,WACf,IAAMC,EAAMhB,IACZiB,kBAAQD,GAAK,kBAAKjB,MAAM,mFAF1B,mCAGuB,uBACvB,wBAAQgB,QAAS,WACf,IAAMC,EAAMR,IACZS,kBAAQD,GAAK,kBAAKjB,MAAM,mFAF1B,0CAG8B,2BCzDhCmB,EACJ,cAAC,IAAD,CAAeC,SAAUN,gBAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,UAKrCC,IAASC,OACPN,EACAO,SAASC,eAAe,SAM1B/C,M","file":"static/js/main.d9a594db.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useCallback } from 'react';\r\nimport { prepare, request, getResult, getCardList } from 'klip-sdk'\r\nfunction KlipTest() {\r\n  let request_key = null\r\n  const prepare_auth  = async () => {\r\n      const bappname = 'Test BApp'\r\n      const successLink = 'https://www.google.com'\r\n      const failLink = 'https://www.naver.com'\r\n      let request_key = null\r\n      const res = await prepare.auth({ bappname, successLink, failLink }) \r\n      if(res.err){\r\n          alert(\"Auth_Error Occured! : \" + res.err)\r\n      } else if (res.request_key){\r\n          request_key = res.request_key\r\n      }\r\n      return request_key\r\n  }\r\n  const prepare_sendKlay = async () => {\r\n      const bappName = 'Test BApp'\r\n      const from = ''\r\n      const to = '0x75f58bc747972aa0f4fd189c0045510e178b8e2c'\r\n      const amount = '1'\r\n      const successLink = 'https://www.google.com'\r\n      const failLink = 'https://www.naver.com'\r\n      let request_key = null\r\n      const res = await prepare.sendKLAY({ bappName, from, to, amount, successLink, failLink })\r\n      if (res.err) {\r\n          console.error(\"SendKlay_Error Occured! : \" + res.err)\r\n      } else if (res.request_key){\r\n          request_key = res.request_key\r\n      }\r\n      return request_key\r\n  }\r\n  const prepare_executeContract = async () => {\r\n      const bappName = 'Test BApp'\r\n      const from = ''\r\n      const to = '0x3ac6f8700f2610fc72261d3dc225d8e47748dfae'\r\n      const value = '0'\r\n      const abi = \"{\\\"constant\\\": true,\\\"inputs\\\": [{\\\"name\\\":\\\"_tokenId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"tokenURI\\\",\\\"outputs\\\":[{\\\"name\\\": \\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}\"\r\n      const params = \"[\\\"1\\\"]\"\r\n      const successLink = 'https://www.google.com'\r\n      const failLink = 'https://www.naver.com'\r\n      let request_key = null\r\n      const res = await prepare.executeContract({ bappName, from, to, value, abi, params, successLink, failLink })\r\n      if (res.err) {\r\n        alert(\"executeContract_Error Occured! : \" + res.err)\r\n      } else if (res.request_key) {\r\n        request_key = res.request_key\r\n      }\r\n      return request_key\r\n  }\r\n  const OwnerAddress = process.env.REACT_APP_PUBLIC_KEY\r\n  return (\r\n    <div>\r\n        <button onClick={()=>{\r\n          const req = prepare_auth()\r\n          request(req, ()=> alert('모바일 환경에서 실행하세요.'))\r\n        }}>Auth 버튼</button><br/>\r\n        <button onClick={()=>{\r\n          const req = prepare_sendKlay()\r\n          request(req, ()=> alert('모바일 환경에서 실행하세요.'))\r\n        }}>SendKlay 버튼</button><br/>\r\n        <button onClick={()=>{\r\n          const req = prepare_executeContract()\r\n          request(req, ()=> alert('모바일 환경에서 실행하세요.'))\r\n        }}>ExecuteContract 버튼</button><br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KlipTest;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, BrowserRouter, Routes } from 'react-router-dom'\nimport KlipTest from './components/Klip-test';\n\nconst routing = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Routes>\n      <Route exact path=\"/\" element={<KlipTest />}/>\n    </Routes>\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}